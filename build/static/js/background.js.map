{"version":3,"file":"static/js/background.js","mappings":"AACAA,OAAOC,QAAQC,YAAYC,YAAY,KACrCH,OAAOI,QAAQC,KAAKC,IAAI,CAAEC,UAAW,GAAIC,UAAW,OAItDR,OAAOC,QAAQQ,UAAUN,YAAY,CAACO,EAASC,EAAQC,KACrD,GAAuB,iBAAnBF,EAAQG,OAIV,OAHAb,OAAOI,QAAQC,KAAKS,IAAI,CAAC,aAAeC,IACtCH,EAAa,CAAEI,IAAKD,EAAOP,eAEtB,EAGT,GAAuB,mBAAnBE,EAAQG,OAA6B,CACvC,MAAMI,EAASP,EAAQO,OACjBC,EAAOR,EAAQQ,KACrB,IAAIC,EAAM,6CACNC,EAAU,CACZ,eAAgB,mBAChB,cAAgB,UAADC,OAAYJ,IAwB7B,OArBIA,GAAUA,EAAOK,WAAW,SAC9BH,EAAM,gDACNC,EAAQ,gBAAkB,2BAC1BA,EAAQ,WAAa,8BAEvBG,MAAMJ,EAAK,CACTK,OAAQ,OACRJ,UACAF,KAAMO,KAAKC,UAAUR,KAEpBS,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IACAA,EAAKC,MACPnB,EAAa,CAAEoB,SAAS,EAAOD,MAAOD,EAAKC,MAAME,UAEjDrB,EAAa,CAAEoB,SAAS,EAAMF,WAGjCI,MAAMC,IACLvB,EAAa,CAAEoB,SAAS,EAAOD,MAAOI,EAAIF,aAEvC,CACT","sources":["background.js"],"sourcesContent":["// Background service worker for the extension\r\nchrome.runtime.onInstalled.addListener(() => {\r\n  chrome.storage.sync.set({ summaries: [], openaiKey: '' });\r\n});\r\n\r\n// Handle messages from content script\r\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n  if (request.action === \"getOpenAIKey\") {\r\n    chrome.storage.sync.get(['openaiKey'], (result) => {\r\n      sendResponse({ key: result.openaiKey });\r\n    });\r\n    return true; // Required for async response\r\n  }\r\n\r\n  if (request.action === \"openai_summary\") {\r\n    const apiKey = request.apiKey;\r\n    const body = request.body;\r\n    let url = \"https://api.openai.com/v1/chat/completions\";\r\n    let headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${apiKey}`\r\n    };\r\n    // Если ключ OpenRouter (начинается с 'or-'), используем другой endpoint и заголовки\r\n    if (apiKey && apiKey.startsWith('or-')) {\r\n      url = \"https://openrouter.ai/api/v1/chat/completions\";\r\n      headers[\"HTTP-Referer\"] = \"https://web.telegram.org\";\r\n      headers[\"X-Title\"] = \"Telegram Summary Extension\";\r\n    }\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.error) {\r\n          sendResponse({ success: false, error: data.error.message });\r\n        } else {\r\n          sendResponse({ success: true, data });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        sendResponse({ success: false, error: err.message });\r\n      });\r\n    return true;\r\n  }\r\n});"],"names":["chrome","runtime","onInstalled","addListener","storage","sync","set","summaries","openaiKey","onMessage","request","sender","sendResponse","action","get","result","key","apiKey","body","url","headers","concat","startsWith","fetch","method","JSON","stringify","then","res","json","data","error","success","message","catch","err"],"sourceRoot":""}